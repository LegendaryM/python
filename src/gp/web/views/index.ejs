<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Gallery</title>
  <style>
    .image-container {
        display: flex;
        flex-wrap: wrap;
    }
    .image-item {
        display: flex;
        align-items: center;
        margin: 80px 0 80px 20px;
        width: 90%;
        border: 2px solid #ccc; /* Add default border */
        padding: 10px; /* Add some padding for better spacing */
    }
    .image-item img {
        /* max-width: 200px; */
        margin-right: 70px;
        transform: scale(1.2);
        /* box-sizing: border-box; */
    }
    .buttons {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .buttons button {
        margin: 5px 0;
        padding: 10px 20px;
        cursor: pointer;
    }
    .red { background-color: red; color: white; }
    .blue { background-color: blue; color: white; }
    .green { background-color: green; color: white; }
    .display1 {visibility: inherit; color:red;}
    .display0 {visibility: hidden;}


    .button-link {
      display: inline-block; /* 使链接像块级元素一样显示 */
      padding: 10px 20px; /* 内边距 */
      font-size: 16px; /* 字体大小 */
      color: #fff; /* 文字颜色 */
      background-color: #007BFF; /* 背景颜色 */
      border: none; /* 无边框 */
      border-radius: 5px; /* 圆角 */
      text-align: center; /* 文本居中 */
      text-decoration: none; /* 去掉下划线 */
      cursor: pointer; /* 鼠标悬停时显示指针 */
      transition: background-color 0.3s ease; /* 背景颜色过渡效果 */
    }

    /* 鼠标悬停时的样式 */
    .button-link:hover {
      background-color: #0056b3; /* 改变背景颜色 */
    }
</style>
  <script>
    function setImageName(name, value) {
      const today = new Date()
      const date_f = today.getFullYear() + '-' + String(today.getMonth() + 1).padStart(2, '0') + '-' 
      +  String(today.getDate()).padStart(2, '0') + ' ' + String(today.getHours()).padStart(2, '0');
      const date_value = value + '(' + date_f + ')'
      fetch('/select-image', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ imageName: name, value:date_value })
      })
      .then(response => {
        response.text()
        
    })
      .then(data => {
        // console.log(data);
        
      })
      .catch(error => {
        console.error('Error:', error);
      });

      document.getElementsByClassName(name +'_label2')[0].textContent = date_value
    }

    function show_new() {
      fetch('/show_new', {
        method: 'GET',
        // headers: {
        //   'Content-Type': 'application/json'
        // },
        // body: JSON.stringify({ imageName: name, value:value })
      })
      .then(response => response.text())
      .then(data => {
          document.open();
          document.write(data);
          document.close();
      });
    }
  </script>
</head>
<body>
  <h1>Image Gallery</h1>
  <a href="/t" target="_blank" class="button-link">Go to Page B</a>  <a href="/show_new" target="_blank" class="button-link">show_new</a> 
  <div id="image-container">
    <% images.forEach(function(image) { 
        let image_name = image.name;
        if (image.new_img == 1) {
          image_name = image.name.replace('.png', '_new.png')
        }
      
      %>
      <div class="image-item">
        <img src="/images/<%= image_name %>" alt="<%= image_name %>">
        <div class="buttons">
          <label class="display<%=image.new_img%>">新</label>
          <label class="label1">当前选择状态：  '<label class="<%=image.name%>_label2"><%=image.status%></label>'</label>
          <button class="green" onclick="setImageName('<%= image.name %>', '下降')">下降</button>
          <button class="blue" onclick="setImageName('<%= image.name %>', '待定')">待定</button>
          <button class="red" onclick="setImageName('<%= image.name %>', '上升')">上升</button>
        </div>
      </div>
      
    <% }) %>
  </div>
</body>
</html>
